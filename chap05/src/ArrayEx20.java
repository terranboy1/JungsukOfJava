import java.util.Scanner;

public class ArrayEx20 {

	public static void main(String[] args) {
		
		//가변 배열
		//자바에선 2차원 이상의 배열을 "배열의 배열"형태로 처리한다는 사실을 이용하면 보다 자유로운 형태의 배열을 구성가능.
		//2차원 이상의 다차원 배열을 생성할 때 전체 배열 차수 중 마지막 차수의 길이를 지정하지 않고
		//추후에 각기 다른 길이의 배열을 생성함으로써 고정된 형태가 아닌, 보다 유동적인 가별 배열을 구성 가능하다.
		//만일 5x3길이의 2차원 배열 score를 생성하는 코드가 있을 때
		// int[][] score = new int[5][3];  //5행 3열의 2차원 배열 생성
		// 위 코드를 아래와 같이 표현 가능.
		// int[][] score = new int[5][];  //두번째 차원의 길이는 지정 안함.
		// score[0] = new int[3];
		// score[1] = new int[3];
		// score[2] = new int[3];
		// score[3] = new int[3];
		// score[4] = new int[3];
		//이걸 이렇게 사용할 수도 있지
		// int[][] score = new int[5][];  //두번째 차원의 길이는 지정 안함.
		// score[0] = new int[4];
		// score[1] = new int[3];
		// score[2] = new int[2];
		// score[3] = new int[2];
		// score[4] = new int[3];
		// 그럼 score.length 값은 여전히 5지만
		// score[i].length의 값들은 각각 4,3,2,2,3 이 된다.
		// 가변배열 역시 중괄호를 이용해 생성과 초기화를 동시에 할 수 있고.
		// int[][] score = {
		//                      {100, 100, 100, 100}
		//                    , {20, 20, 20}
		//                    , {30, 30}
		//                    , {40, 40}
		//                    , {50, 50, 50}
		//                 };
		
		//다차원 배열의 활용
		//ㅡㅡㅡㅡㅡㅡㅡㅡㅡ
		//다차원 배열의 대표적인 예들이 몇 가지 있다. 이 예제들만 잘 이해해도 다차원 배열을 활용하는 데 별 어려움 없을 것
		//[예제5-20]좌표에 X 곱하기 - 입력한 2차원 좌표의 위치에 X를 표시(근데 이거 이해를 잘 못해서 안썼음 ㅡ,.ㅡㅋ)
		//[예제5-21]빙고                   - 빙고판을 만들고 입력받은 숫자를 빙고판에서 지움.
		//[예제5-22]행렬의 곱셈        - 두 행렬(matrix)을 곱한 결과를 출력
		//[예제5-23]단어맞추기         - 영어 단어를 보여주고, 뜻을 맞추는 게임
		// 이 예제들에 추가하면 좋을만한 기능이 없는지 고민해보고 조금씩 단계별로 발전시켜보면 좋은 공부가 될 것!
		
		} 
	}
